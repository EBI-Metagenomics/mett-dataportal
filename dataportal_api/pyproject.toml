[project]
name = "mett-dataportal"
version = "0.1.0"
description = "METT Data Portal API and backend services"
authors = [{ name = "Vikas Gupta", email = "vikasg@ebi.ac.uk" }]
readme = "README.md"
requires-python = ">=3.13"

dependencies = [
    "django==5.2.1",
    "python-decouple==3.8",
    "requests==2.32.3",
    "django-filter==24.2",
    "django-compressor==4.5.1",
    "django-ninja==1.4.1",
    "django-admin-inline-paginator==0.4.0",
    "django-unfold==0.33.0",
    "pydantic-settings==2.10.0",
    "pydantic[email]==2.10.0",
    "django-sass-processor==1.4.1",
    "django-cors-headers==4.4.0",
    "psycopg[binary,pool]==3.2.9",
    "libsass==0.23.0",
    "whitenoise==6.7.0",
    "gunicorn==23.0.0",
    "cachetools==5.5.0",
    "elasticsearch-dsl==8.17.1",
    "django-prometheus==2.3.1",
    "pyhmmer==0.11.1",
    "celery[redis]>=5.5.2",
    "django-celery-results==2.6.0",
    "django-celery-beat==2.8.1",
    "biopython==1.85",
    "django-redis==5.4.0",
    "redis==5.0.1",
    "django-ratelimit==4.1.0",
    "django-cacheops==7.2",
    "django-health-check==3.17.0",
    "sentry-sdk[django]==1.40.0",
    "structlog==24.1.0",
    "django-extensions==3.2.3",
    "django-debug-toolbar==4.4.6",
]

[dependency-groups]
dev = [
    "pre-commit==4.2.0",
    "django-debug-toolbar==4.4.6",
    "pandas==2.2.3",
    "black==24.10.0",
    "ruff==0.7.1",
    "pytest-mock==3.14.0",
    "pytest==8.3.5",
    "pytest-django==4.11.1",
    "factory-boy==3.3.3",
    "pytest-asyncio==0.26.0",
    "pytest-cov==4.0.0",
    "pytest-html==3.2.0",
    "pytest-env==1.1.5",
    "pytest-benchmark==4.0.0",
    "pytest-xdist==3.5.0",
    "coverage==7.4.1",
    "bandit==1.7.5",
    "mypy==1.8.0",
    "django-stubs==4.2.7",
]

[tool.black]
line-length = 100
target-version = ['py313']

[tool.ruff]
line-length = 100
target-version = "py313"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.ruff.lint]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B904",  # within an except clause, raise exceptions with raise ... from err
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "django.*",
    "elasticsearch_dsl.*",
    "celery.*",
    "redis.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--reuse-db --ds=dataportal.settings.test --cov=dataportal --cov-report=html --cov-report=term-missing"
testpaths = ["tests", "dataportal/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
